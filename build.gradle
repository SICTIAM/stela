buildscript {
	ext {
		springBootVersion = '2.0.0.M3'
		ktVersion = "1.1.3"
	}
	repositories {
		mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	
	apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
	apply plugin: 'docker'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	repositories {
		mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
		maven {
			// docker-compose-rule is published on bintray
			url 'https://dl.bintray.com/palantir/releases'
		}
	}

	dependencies {
        compile('org.springframework.boot:spring-boot-devtools')
        compile('org.springframework.boot:spring-boot-starter-mail:1.5.9.RELEASE')        
        compile('ch.qos.logback:logback-classic:1.1.5')
        compile "org.jetbrains.kotlin:kotlin-stdlib:$ktVersion"
		compile "org.jetbrains.kotlin:kotlin-reflect:$ktVersion"
        compile ('xyz.capybara:clamav-client:2.0.1')
        compile("org.springframework.retry:spring-retry")
        compile("org.springframework.boot:spring-boot-starter-aop")
        runtime('org.flywaydb:flyway-core')
        testCompile('junit:junit:4.12')
        testCompile('com.palantir.docker.compose:docker-compose-rule-junit4:0.31.1')
        testCompile('com.icegreen:greenmail:1.5.5')
        testCompile('org.apache.commons:commons-email:1.4')
    }

    ext {
        springCloudVersion = 'Finchley.M1'
    }

    bootRun {
        environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    bootJar {
        launchScript {
            included = true
        }
    }

    task image(type: Docker, dependsOn: build) {
        push = false
        applicationName = jar.baseName
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            } 
            copy {
                from ("${gradle.gradleUserHomeDir}/../.ssh/id_rsa")
                into stageDir
            }

        }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}
