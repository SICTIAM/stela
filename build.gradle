buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
		ktVersion = "1.1.3"
	}
	repositories {
		mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath('ru.vyarus:gradle-quality-plugin:2.4.0')
	}
}

// eg ./gradlew bootRun taskTree
plugins {
    id "com.dorongold.task-tree" version "1.3"
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'

	apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
	apply plugin: 'docker'

	sourceCompatibility = 1.9
	targetCompatibility = 1.9
	
	repositories {
		mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
		maven {
			// docker-compose-rule is published on bintray
			url 'https://dl.bintray.com/palantir/releases'
		}
		maven {
            url 'https://ec.europa.eu/cefdigital/artifact/content/groups/public'
        }
	}

	dependencies {
        compile('org.springframework.boot:spring-boot-starter-mail:1.5.9.RELEASE')
        compile('org.springframework.boot:spring-boot-starter-actuator') 
        compile('ch.qos.logback:logback-classic:1.1.5')
        compile "org.jetbrains.kotlin:kotlin-stdlib:$ktVersion"
		compile "org.jetbrains.kotlin:kotlin-reflect:$ktVersion"
        compile ('xyz.capybara:clamav-client:2.0.1')
        compile("org.springframework.retry:spring-retry")
        compile("org.springframework.boot:spring-boot-starter-aop")
        compile('com.jayway.jsonpath:json-path:2.4.0')
        compile('io.jsonwebtoken:jjwt:0.9.0') 
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
        compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.11'
        compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.11'
        runtime('org.springframework.boot:spring-boot-devtools')
        runtime('org.flywaydb:flyway-core')
        testCompile('junit:junit:4.12')
        testCompile('com.palantir.docker.compose:docker-compose-rule-junit4:0.31.1')
        testCompile('com.icegreen:greenmail:1.5.5')
        testCompile('org.apache.commons:commons-email:1.4')
    }

    ext {
        springCloudVersion = 'Finchley.M5'
    }

    bootRun {
        environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

	if (project.name.endsWith('service')) {
	    task image(type: Docker, dependsOn: build) {
			registry = 'forge-registry.sictiam.fr/internet'
	        push = project.hasProperty('push')
            if(project.hasProperty('prod')) {
                tagVersion = 'prod'
            }
	        applicationName = 'stela-poc/' + jar.baseName
	        dockerfile = file('src/main/docker/Dockerfile')
	        doFirst {
	            copy {
	                from jar
	                into stageDir
	            } 
	            copy {
	                from ("${gradle.gradleUserHomeDir}/../.ssh/id_rsa")
	                into stageDir
	            }
	        }    
	    }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}
