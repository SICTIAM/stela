plugins {
    id "com.moowork.node" version "1.2.0"
}

archivesBaseName = 'stela-api-gateway'

node {
    version = '8.9.4'
    //yarnVersion = '0.16.1'
    download = false
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    compile('org.springframework.cloud:spring-cloud-starter-security')
    compile("org.springframework.retry:spring-retry")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('com.ozwillo:ozwillo-java-spring-integration:1.25.8')
    compile('net.logstash.logback:logstash-logback-encoder:5.2')
    compile('ch.qos.logback:logback-classic:1.2.3')
    compile('org.codehaus.janino:janino:3.0.6')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

processResources {
    // we don't want the JS sources in the jar, we only need their transpiled, bundled version in build/
    exclude 'build/', 'node_modules/', 'src/', '.env.development', '.gitignore/', 'package.json/', 'yarn.lock/'
}

task yarnInstall(type: YarnTask) {
    args = ['--cwd', './src/main/resources', 'install',]
}
task frontBundle(type: YarnTask) {
    args = ['--cwd', './src/main/resources', 'run', 'build']
}
task copyFrontBuild(type: Copy) {
    from "${sourceSets.main.resources.srcDirs[0]}/build/"
    into "${sourceSets.main.output.resourcesDir}/public/"
}

bootJar.dependsOn(copyFrontBuild)
copyFrontBuild.dependsOn(frontBundle)
frontBundle.dependsOn(yarnInstall)
